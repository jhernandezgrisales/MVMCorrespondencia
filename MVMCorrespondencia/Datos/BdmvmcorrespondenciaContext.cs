// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using MVMCorrespondencia.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace MVMCorrespondencia.Datos
{
    public partial class BdmvmcorrespondenciaContext : DbContext
    {
        public BdmvmcorrespondenciaContext()
        {
        }

        public BdmvmcorrespondenciaContext(DbContextOptions<BdmvmcorrespondenciaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Contactos> Contactos { get; set; }
        public virtual DbSet<Correspondeciainterna> Correspondeciainterna { get; set; }
        public virtual DbSet<Correspondenciaexterna> Correspondenciaexterna { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Contactos>(entity =>
            {
                entity.HasKey(e => e.Idcontacto);

                entity.ToTable("contactos");

                entity.Property(e => e.Idcontacto).HasColumnName("idcontacto");

                entity.Property(e => e.Celular).HasColumnName("celular");

                entity.Property(e => e.Correo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("correo");

                entity.Property(e => e.Direccion)
                    .HasColumnType("text")
                    .HasColumnName("direccion");

                entity.Property(e => e.Documento)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("documento");

                entity.Property(e => e.Nombre)
                    .HasColumnType("text")
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<Correspondeciainterna>(entity =>
            {
                entity.HasKey(e => e.Consecutivointerna);

                entity.ToTable("correspondeciainterna");

                entity.Property(e => e.Consecutivointerna).HasColumnName("consecutivointerna");

                entity.Property(e => e.Fecha)
                    .HasColumnType("date")
                    .HasColumnName("fecha");

                entity.Property(e => e.Idcontactodestinatario).HasColumnName("idcontactodestinatario");

                entity.Property(e => e.Idcontactoremitente).HasColumnName("idcontactoremitente");

                entity.Property(e => e.Radicadointerna)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("radicadointerna");

                entity.HasOne(d => d.IdcontactodestinatarioNavigation)
                    .WithMany(p => p.CorrespondeciainternaIdcontactodestinatarioNavigation)
                    .HasForeignKey(d => d.Idcontactodestinatario)
                    .HasConstraintName("FK_correspondeciainterna_contactos1");

                entity.HasOne(d => d.IdcontactoremitenteNavigation)
                    .WithMany(p => p.CorrespondeciainternaIdcontactoremitenteNavigation)
                    .HasForeignKey(d => d.Idcontactoremitente)
                    .HasConstraintName("FK_correspondeciainterna_contactos");
            });

            modelBuilder.Entity<Correspondenciaexterna>(entity =>
            {
                entity.HasKey(e => e.Consecutivoexterna);

                entity.ToTable("correspondenciaexterna");

                entity.Property(e => e.Consecutivoexterna).HasColumnName("consecutivoexterna");

                entity.Property(e => e.Fecha)
                    .HasColumnType("date")
                    .HasColumnName("fecha");

                entity.Property(e => e.Idcontactodestinatario).HasColumnName("idcontactodestinatario");

                entity.Property(e => e.Idcontactoremitente).HasColumnName("idcontactoremitente");

                entity.Property(e => e.Radicadoexterno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("radicadoexterno");

                entity.HasOne(d => d.IdcontactodestinatarioNavigation)
                    .WithMany(p => p.CorrespondenciaexternaIdcontactodestinatarioNavigation)
                    .HasForeignKey(d => d.Idcontactodestinatario)
                    .HasConstraintName("FK_correspondenciaexterna_contactosd");

                entity.HasOne(d => d.IdcontactoremitenteNavigation)
                    .WithMany(p => p.CorrespondenciaexternaIdcontactoremitenteNavigation)
                    .HasForeignKey(d => d.Idcontactoremitente)
                    .HasConstraintName("FK_correspondenciaexterna_contactos");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}